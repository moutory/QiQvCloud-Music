系统设计优化点：
1. pom文件用managerDepedence管理
2. 后续数据库用flyway管理
3. 使用redis保存用户
4. 使用mybatis工具类生成实体类和mapper



功能优化点：
1、登录页面要验证码
2、补充缺漏的数据
3、扫码登录
4、添加完歌手没有刷新
5、使用常量代替部分字符串
6、前端歌曲搜索框，只能搜索一次
7、首页的推荐的歌手和歌曲，用算法去做
8、注册的时候校验是否用户已存在
    已存在之后，密码找回？
9、手机验证码登录
10、对用户提交的数据进行有效性校验，比如歌单评分大于10就是很明显不合理的
11、限制登录次数
12、点赞人数进行约束，一个会员对同一首歌或者歌单，只能点赞一次
13、删除评论后面没有做仔细的校验，除管理员外，用户只可以删除自己的评论
14、将结果集为空和crud失败前端显示优化一下
15、返回用户信息的时候，对关键信息进行脱敏操作。可以参考小视频项目的注解
16、取消收藏歌曲暂时还没做
17、前端可以根据不同的场景设置不同的默认图片，比如歌手和用户头像

不清楚的知识点：
slot-scope的使用
https://blog.csdn.net/qq_28929589/article/details/82896364
歌手页面新增、删除、更新后的刷新问题
前端冒泡事件 clint下拉框

值得记录的知识点
前端搜索框通过watch、v-model来实现实时更新
this.$router.push() 和this.$router.go() 的区别
https://blog.csdn.net/qq_24147051/article/details/106908582

http 和 https 的区别
