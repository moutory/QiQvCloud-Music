<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiqv.music.dao.RankMapper" >
  <resultMap id="BaseResultMap" type="com.qiqv.music.pojo.Rank" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="song_list_id" property="songListId" jdbcType="INTEGER" />
    <result column="consumer_id" property="consumerId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="insert_at" property="insertAt" jdbcType="TIMESTAMP" />
    <result column="insert_by" property="insertBy" jdbcType="VARCHAR" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, song_list_id, consumer_id, score, insert_at, insert_by, update_at, update_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiqv.music.pojo.RankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from rank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiqv.music.pojo.RankExample" >
    delete from rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiqv.music.pojo.Rank" >
    insert into rank (id, song_list_id, consumer_id,
      score, insert_at, insert_by,
      update_at, update_by)
    values (#{id,jdbcType=INTEGER}, #{songListId,jdbcType=INTEGER}, #{consumerId,jdbcType=INTEGER},
      #{score,jdbcType=INTEGER}, #{insertAt,jdbcType=TIMESTAMP}, #{insertBy,jdbcType=VARCHAR},
      #{updateAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiqv.music.pojo.Rank" >
    insert into rank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="songListId != null" >
        song_list_id,
      </if>
      <if test="consumerId != null" >
        consumer_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="insertAt != null" >
        insert_at,
      </if>
      <if test="insertBy != null" >
        insert_by,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songListId != null" >
        #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null" >
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="insertAt != null" >
        #{insertAt,jdbcType=TIMESTAMP},
      </if>
      <if test="insertBy != null" >
        #{insertBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiqv.music.pojo.RankExample" resultType="java.lang.Integer" >
    select count(*) from rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rank
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.songListId != null" >
        song_list_id = #{record.songListId,jdbcType=INTEGER},
      </if>
      <if test="record.consumerId != null" >
        consumer_id = #{record.consumerId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.insertAt != null" >
        insert_at = #{record.insertAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertBy != null" >
        insert_by = #{record.insertBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rank
    set id = #{record.id,jdbcType=INTEGER},
      song_list_id = #{record.songListId,jdbcType=INTEGER},
      consumer_id = #{record.consumerId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      insert_at = #{record.insertAt,jdbcType=TIMESTAMP},
      insert_by = #{record.insertBy,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiqv.music.pojo.Rank" >
    update rank
    <set >
      <if test="songListId != null" >
        song_list_id = #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null" >
        consumer_id = #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="insertAt != null" >
        insert_at = #{insertAt,jdbcType=TIMESTAMP},
      </if>
      <if test="insertBy != null" >
        insert_by = #{insertBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiqv.music.pojo.Rank" >
    update rank
    set song_list_id = #{songListId,jdbcType=INTEGER},
      consumer_id = #{consumerId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      insert_at = #{insertAt,jdbcType=TIMESTAMP},
      insert_by = #{insertBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--查询歌单平均分-->
  <select id="getAverageRankBySongListId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
        SELECT AVG(R.score) FROM rank R GROUP BY R.SONG_LIST_ID HAVING R.SONG_LIST_ID= #{songListId,jdbcType=INTEGER}
  </select>

</mapper>
